;Inicializa HEAP
[0000]: 0C 00 B0 01      1:     MOV       [BX],          1
;Escribe mensaje al usuario
msg     equ     "Escriba palabras seguidas de ENTER (en blanco para terminar)"
[0001]: 04 00 A1 00      2:     MOV         ax,       %100
[0002]: 04 00 B0 01      3:     MOV         bx,          1
[0003]: 04 00 CF FF      4:     MOV         cx,         -1
[0004]: 04 00 D0 26      5:     MOV         dx,        msg
[0005]: F0 00 00 04      6:     SYS         %4
[0006]: 04 00 C0 01      7:     MOV         cx,          1
;Lee una palabra en DS:0
[0007]: 04 00 A1 10     ini     MOV         ax,       %110
[0008]: 04 00 B0 02      9:     MOV         bx,          2
[0009]: 04 00 CF FF     10:     MOV         cx,         -1
[0010]: 04 00 D0 00     11:     MOV         dx,          0
[0011]: F0 00 00 03     12:     SYS         %3
[0012]: C7 00 C0 0A     13:    SLEN         cx,       [AX]
[0013]: 64 00 C0 00     14:     CMP         cx,          0       ;Si está vacía...
[0014]: F2 00 00 14     15:      JZ     finlee                    ;...termina la lectura
[0015]: 07 00 D0 0B     16:     MOV         dx,       [BX]       ;Sino, muevo el HEAP a DX
[0016]: 1D 00 B0 0C     17:     ADD       [BX],         cx       ;Incremento el HEAP para reservar la memoria
[0017]: 1C 00 B0 01     18:     ADD       [BX],          1       ;Uno más por el \0
[0018]: DF 61 B0 0D     19:    SMOV    [BX+DX],       [DX]       ;Agrega la palabra en el ES
[0019]: F1 00 00 07     20:     JMP        ini
[0020]: 04 00 D0 01  finlee     MOV         dx,          1       ;Inicializa 1 para comenzar el recorrido
[0021]: 07 00 C0 0B     22:     MOV         cx,       [BX]
[0022]: 24 00 C0 01     23:     SUB         cx,          1       ;Posiciona a cx en el último \0
[0023]: 65 00 D0 0C    next     CMP         dx,         cx       ;Termina cuando DX llega al último \0
[0024]: F2 00 00 1F     25:      JZ        fin
[0025]: 9C 00 D0 DF     may     AND       [DX],        %DF       ;Pasa a MAYUSCULAS
[0026]: 6C 00 D0 00     27:     CMP       [DX],          0       ;Si encuentra un \0 ...
[0027]: F5 00 00 1D     28:     JNZ        sig
[0028]: 0C 00 D0 20     29:     MOV       [DX], ' '               ;... pone un espacio para contactenar
[0029]: 14 00 D0 01     sig     ADD         dx,          1
[0030]: F1 00 00 17     31:     JMP       next
; Muestra cadena concatenada y pasada a mayusculas
[0031]: F0 00 00 0F     fin     SYS         %F
[0032]: 04 00 A1 00     33:     MOV         ax,       %100
[0033]: 04 00 B0 03     34:     MOV         bx,          3
[0034]: 04 00 CF FF     35:     MOV         cx,         -1
[0035]: 04 00 D0 01     36:     MOV         dx,          1
[0036]: F0 00 00 04     37:     SYS         %4
[0037]: FF 10 00 00     38:    STOP